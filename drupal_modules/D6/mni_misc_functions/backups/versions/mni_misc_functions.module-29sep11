<?php
// $Id: mni_misc_functions.module,v 1 2011/04/12 14:41:03 jc Exp $

/**
 * Implementation of hook_cart_pane() from ubercart.
 *
 * Remove links from cart items. Links were sending to product nodes on mninews site,
 * which were dead links. Better to simply remove them. - jcerda 08/19/11
 */
function mni_misc_functions_cart_pane($items)
{
	$panes[] = array(
		'id' => 'cart_form',
		'title' => t('Disable Cart Desc Links'),
		'enabled' => TRUE,
		'weight' => 0,
		'body' => "<script type='text/javascript'>".
			"    jQuery(document).ready(function() {".
			"        jQuery('div#cart-form-products td.desc a').each(function () {".
			"            var p = jQuery('<p></p>').append(jQuery(this).contents());".
			"            jQuery(this).replaceWith(p);".
			"        });".
			"    });".
			"</script>"
	);
	return $panes;
}

/**
 * @file
 * put here anything that needs to be in a module
 */

function mni_misc_functions_perm() {
 return array('administer mni_misc_functions');
}

/**
 * Implementation of hook_menu().
 */
function mni_misc_functions_menu() {
  $items = array();
  //sets up a url for the latest version of certain subscription articles
  $items['dashboard_latest/%/%'] = array(
    'page callback' => 'mni_misc_functions_display_latest_subscription_article',
    'page arguments' => array(1, 2),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['chatstarter'] = array(
    'page callback' => 'mni_misc_functions_chatstarter',
    'page arguments' => array(),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );



	return $items;
}

function mni_misc_functions_menu_alter(&$items){
		/*	rename "subscriptions" to "E-Mail Alerts" for the notifications module subscriptions
					(mostly done with string overrides module)
		*/
		/* remove overview and add subscriptions tabs */
	  $items['user']['type'] = MENU_CALLBACK;
	  $items['user/%user/notifications/add']['type'] = MENU_CALLBACK;
	  $items['user/%user/notifications/overview']['type'] = MENU_CALLBACK;
	  $items['user/%user/notifications']['page arguments'] = array('notifications_manage_user_subscriptions', 1);
	  $items['user/%user/notifications']['file'] = 'notifications.manage.inc';

		//the chatroom module passes username which we want to protect - this overrides to pass uid
	  $items['chatroom/ajax/user/invite/%node'] = array(
	    'description' => t('Invite a user to a chat.'),
	    'page callback' => 'mni_misc_functions_chatroom_chat_ajax_user_invite',
	    'file' => 'mni_misc_functions.module',
	    'file path' => drupal_get_path('module', 'mni_misc_functions'),
	    'page arguments' => array(4),
	    'access callback' => TRUE,
	  );

		//this removes the default /node page which we aren't using
		unset($items['node']);
//dpr($items);
}


//more efficient than taxonomy_get_term_by_name
//used by function below
function _taxonomy_get_first_term_id_by_name($name) {
  $db_result = db_query(db_rewrite_sql("SELECT t.tid FROM {term_data} t WHERE replace(LOWER(t.name),'/','') = LOWER('%s')", 't', 'tid'), trim($name));
  $term = db_fetch_object($db_result);
  $result = $term->tid;

  return $result;
}

//this replaces the view for the items that only display the latest version of the story
//using the view and then redirecting to the node was too slow
//unfortunately this isn't much faster, so I left the view in there if there's any reason to switch back
function mni_misc_functions_display_latest_subscription_article($productname,$termname){

	$productid = _taxonomy_get_first_term_id_by_name(str_replace('-',' ',$productname));
	$termid = _taxonomy_get_first_term_id_by_name(str_replace('-',' ',$termname));

	$sql="
		SELECT n.nid AS nid
		FROM node n
		INNER JOIN term_node tn1 ON n.vid = tn1.vid
		LEFT JOIN term_node tn2 ON n.vid = tn2.vid
		WHERE (n.type in ('subscription_article')) AND (n.status <> 0) AND (tn1.tid = %d) AND (tn2.tid = %d)
		ORDER BY n.created DESC
		LIMIT 1
		";

	$result = db_query(db_rewrite_sql($sql), $productid,$termid);
	$row = db_fetch_array($result);
	if($row){
		drupal_goto(drupal_lookup_path('alias',"node/".$row['nid']));
	}else{
		drupal_set_message('No "'.$termname.'" articles are available at this time.');
		drupal_goto("not-found");
	}
}

/**
 * Implementation of hook_form_alter().
 */
function mni_misc_functions_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
  case 'chatroom_chat_management_form':
		_mni_misc_functions_chatroom_chat_management_form_form_alter($form, $form_state, $form_id);
    break;
  case 'user_register':
		_mni_misc_functions_user_register_form_alter($form, $form_state, $form_id);
    break;
  case 'comment_form':
		_mni_misc_functions_comment_form_alter($form, $form_state, $form_id);
    break;
  case 'print_mail_form':
		_mni_misc_functions_print_mail_form_alter($form, $form_state, $form_id);
    break;
  case 'webform_client_form_1789':
		_mni_misc_functions_webform_client_form_1789_form_alter($form, $form_state, $form_id);
    break;
  case 'views_exposed_form':
		_mni_misc_functions_views_exposed_form_form_alter($form, $form_state, $form_id);
    break;
  }
	_mni_misc_functions_notifications_form_alter($form, $form_state, $form_id);
}

function _mni_misc_functions_user_register_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'user_register') {
  	// add js to prepopulate display name if empty AND only if user is not a subscriber (username=email address)
  	drupal_add_js(drupal_get_path('module', 'mni_misc_functions') . '/user_reg_prepop.js');
    return $form;
  }
}
/* add date popup boxes to views search */
function _mni_misc_functions_views_exposed_form_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'views_exposed_form') {
    $form['date_range_filter_to']['#type']="date_popup";
    $form['date_range_filter_to']['#date_format']="Y-m-d";
    $form['date_range_filter_to']['#date_label_position']="within";
    $form['date_range_filter_to']['#date_year_range']="-3:+3";
    $form['date_range_filter_to']['#size']="20";

    $form['date_range_filter_from']['#type']="date_popup";
    $form['date_range_filter_from']['#date_format']="Y-m-d";
    $form['date_range_filter_from']['#date_label_position']="within";
    $form['date_range_filter_from']['#date_year_range']="-3:+3";
    $form['date_range_filter_from']['#size']="20";

    return $form;
  }
}

/*style the email alerts form to collapse */
function _mni_misc_functions_notifications_form_alter(&$form, $form_state, $form_id) {
	$pos = strpos($form_id, "notifications_ui_options_form"); //this form may appear multiple times each id appends _0 _1 ...
	if ($pos !== false) {
		//print_r($form);
    $form['subscriptions']['#type'] = 'fieldset';
    $form['subscriptions']['#title'] = t('Sign up for E-Mail Alerts');
    $form['subscriptions']['#collapsible'] = TRUE;
    $form['subscriptions']['#collapsed'] = TRUE;

	}
}


/*
 * the "to:" date needs to be increased by 1 day in order to actually include the day the user selected
 *
 * I tried 8 million ways to do this and this was the only way I could get to work.  It's unfortunate because it means
 * if anyone alters that view (like changing the order of the filters) it could break
 * so, TODO: come up with a better way...
 */
function mni_misc_functions_views_query_alter(&$view, &$query) {
  if($view->name == 'search'){
  	$d=$query->where[0]['args'][4];
  	if(is_numeric($d)){
  		//$d=strtotime(date('Y-m-d',$d).' 23:59:59');
  		//duh:
  		$d+=86400;
			$query->where[0]['args'][4]=$d;
		}
	}
}


/* comments want the username to be the actual username, but we are using profile_display_name.
 * the comment module itself should get this right, but it doesn't work because the user
 * object needs to be reloaded, i guess because of mni_username
 */
function _mni_misc_functions_comment_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'comment_form') {
  	global $user;
  	$user=user_load($user->uid);
    $form['author'] = array('#type' => 'value', '#value' => $user->name);

    return $form;

  }
}

/****************************************************
			chatroom related
*****************************************************/

/**
 * called by mni_misc_functions_form_alter().
 */
function _mni_misc_functions_chatroom_chat_management_form_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'chatroom_chat_management_form') {
  	//user_name
		//remove confusing and unneeded buttons from chat form
		$form['chat_manager']['#title']="";
		$form['chat_manager']['#collapsible']=0;
		unset($form['chat_manager']['add_user']);
		unset($form['chat_manager']['invite_user']);
		unset($form['chat_manager']['make_public']);
		unset($form['chat_manager']['archive']);

		//add list of users to invite
		$form['list_users'] = array(
    	'#value' => logged_in_user_links_for_chat()
	  );
  }
}

function logged_in_user_links_for_chat(){
	global $user;
	$output="";
	$Anon=check_plain(variable_get('anonymous', t('Anonymous')));

	//note pv.fid=12 corresponds to the field "profile_disallow_invite_list".
	//you could improve readability at the expense of performance by using another join instead like this:
	//left join profile_fields pf on pv.fid=pf.fid
	$sql="
		SELECT distinct u.name,u.uid
		FROM {users} u
		inner join {sessions} s on u.uid=s.uid
		left join profile_values pv on u.uid=pv.uid and pv.fid=12
		WHERE
			(pv.fid is null or pv.value <>1)
			and u.uid <>0 and u.uid <> %d
			and FROM_UNIXTIME(s.timestamp)>DATE_SUB(now(),INTERVAL 20 MINUTE)
	";

	$result = db_query($sql, $user->uid);

	while ($row= db_fetch_array($result)) {
    $items[]=$row;
    $themed_user_name=theme('username',user_load($row[uid]));
		if($themed_user_name!=$Anon && !empty($themed_user_name)){
	    $u="<a href='#' onclick='Drupal.chatroom.userInvite(\"".$row[uid]."\")'>".$themed_user_name."</a>";
    	$output.="<li>".$u."</li>";
    }
	}
	if($output!=""){
    $output= "<div class='form-item'><a name='online_users'></a><label>Invite someone from the list of online users below</label><ul>".$output."</ul></div>";
	}else{
    $output= "<div class='form-item'><label>No other users are currently available to chat.</label></div>";
	}
	return $output;
}


/* a call to this function will create a new chat and send the user to it where they can then invite other users */
function mni_misc_functions_chatstarter(){
	global $user;

	//check whether user has entered profile name - if not make them first by sending to profile page
	if(check_need_profile_name($user)){
    drupal_set_message("In order to participate in chats, you must first enter a display name in your user profile",'error' );
		drupal_goto("user/".$user->uid."/edit/Display%20Settings");
	}else{

		$new_chat_node= array(
			'type'    => 'chat',
			'title'   => 'MNI Chat',
			'uid'     => $user->uid,
			'name'    => $user->name,
			'status'  => 1,
			'comment' => 0,
			'promote' => 0,
			'revision'=> 1,
			'format'  => 1,
			'body'    => '',
			'poll_freq'=>1,
			'private' => 1,
			'profile_picture' => 0,
		);
		$new_chat_node = node_submit($new_chat_node);
		node_save($new_chat_node);
		$new_chat_node_nid=$new_chat_node->nid;
		unset($new_chat_node);

		//send user there
		drupal_goto("node/".$new_chat_node_nid);
	}
}

/**
 * Implementation of hook_chatroom_chat_invites_notify().
 *
 * @param mixed $chat_user
 * @param mixed $invites
 * @return void
 */
function mni_misc_functions_chatroom_chat_invites_notify($chat_user, $invites) {
	//remove the msg set by chatroom module message
	//our new message is set elsewhere
  foreach ($invites as $invite) {
    if ($_GET['q'] != 'node/' . $invite->nid) {
      $oldlink = l($invite->title, 'node/' . $invite->nid);
      $oldmessage = t('You have been invited to the chat !link by user %name', array('!link' => $oldlink, '%name' => $invite->name));
	    $key=array_search($oldmessage, $_SESSION['messages']['status']);
	    if ($key!==false) {
	    	//if found remove it
	      unset($_SESSION['messages']['status'][$key]);
	    }
	    //have to sort array or it won't display for some reason
      sort($_SESSION['messages']['status']);
      if (count($_SESSION['messages']['status'])==0) unset($_SESSION['messages']['status']);

    }
  }
}


/**
 * copied and altered from the chatroom module to allow passing uid instead of username.
 * note that the form still passes an item called username, but it is now filled with uid
 *
 * also this function adds the creation of an ajax_alert, rather than the chatroom invitation method which is drupal_set_message
 *
 * Ajax menu callback, invite a user to a chat.
 *
 * @param mixed $node
 * @return void
 */
function mni_misc_functions_chatroom_chat_ajax_user_invite($node) {
  global $user;

  if (!chatroom_check_token($_POST['formToken'], $_POST['formId'])) {
    exit;
  }

  // No point if we don't have a valid user.
  if (!isset($_POST['user_name'])) {
    return;
  }
  $chat_user = user_load(array('uid' => $_POST['user_name']));
  if (!$chat_user) {
    return;
  }

  //create an ajax_alert
	$alert=array(
		'msg_type'=>'MNI Chat Invitation',
		'css_class'=>'chat-invitation',
		'msg'=>theme('username',user_load($user->uid)).' has invited you to chat on MNI Chat',
		'action_link_text'=>'Click here to join them',
		'action_link_url'=>'/'.drupal_get_path_alias('node/'.$node->nid),
  );
  if (module_exists('ajax_alerts')) {
		ajax_alerts_alert_create($alert,array($chat_user->uid));
	}else{
		drupal_set_message("MNI Chat invitation From ".theme('username',user_load($user->uid)).". <a href='".drupal_get_path_alias('node/'.$node->nid)."'>Click here to join them.</a>" );
	}

  if (chatroom_chat_save_invite($chat_user, $user, $node)) {

    //do the regular chatroom functions
    $output = '<div class="chatroom-system-msg new-message">'. t('User %username invited', array('%username' => theme('username',$chat_user))) .'</div>';
    drupal_json(array('data' => array('userInvited' => $output)));

  }
}


/*
 ****************************************
 * subscribers
 ****************************************
 */

/* determine is a user is a subscriber.  based on login method */
function mni_misc_functions_is_user_a_subscriber() {
	if( $_SESSION['CASLI'] ){
		return true;
	} else {
		return false;
	}
}

function check_need_profile_name($user){
	//for subscribers, since their username is email, make them enter real name before using chat
	$retval=false;
	if(verifyLoginMethodIsCAS()){
		$user=user_load($user->uid); //get whole profile
		if(empty($user->profile_display_name)){
			$retval= true;
		}
	}
	return $retval;
}

/*list of subscription products that user is not subscribed to */
/* used on user profile page and on mni-dashboard */
function mni_misc_functions_list_products_user_not_subscribed_to($col_break=0) {
	global $user;
	$current_users_roles=implode(array_keys($user->roles), ',');
	$products = array();
	//and n.nid not in (624,625,627,6852 )==scream, email services,alphaflash, and the product overview page
	$sql = "
	SELECT n.title, n.nid
	from {node} n
	join {content_type_product_info_page} ctpip on n.nid=ctpip.nid and n.vid=ctpip.vid
	where n.type ='product_info_page'
	 and n.nid not in (624,625,627,6852 )
	 and n.nid not in (
		 	SELECT n2.nid
			FROM {node} n2
			LEFT JOIN {content_field_related_roles} cfrr ON n2.vid = cfrr.vid
			WHERE (n2.type ='product_info_page') AND (cfrr.field_related_roles_value IN (%s))
		) order by ctpip.field_weight_value";

	$result = db_query($sql, $current_users_roles);
	while ($row= db_fetch_array($result)) {
		$products[]= l($row[title], "node/".$row[nid]);
		if ($col_break!=0){
			if(count($products)>=$col_break) {
				/*col break */
				echo MNI_simple_item_list($products);
				$products = array();
			}
		}
	}
	/* get any remainder */
	if(count($products)) {
		echo MNI_simple_item_list($products);
	}
}

/* is user subscribed to a given product.  used on product info pages to direct them to dashboard if they thought they were getting there via menu */
function mni_misc_functions_is_user_subscribed($prod_page_nid) {
	global $user;
	$current_users_roles=implode(array_keys($user->roles), ',');

	$sql = "SELECT c.nid
					FROM content_field_related_roles c
					WHERE c.nid=%d
					AND c.field_related_roles_value IN (%s)";
	$result = db_query($sql,$prod_page_nid, $current_users_roles);
	$row = db_fetch_array($result);
	if($row){
		return true;
	}
	return false;
}

/* ******************************************
 *  for realdisplay - realtime scrollers
 * ******************************************
 */
  function encryptText($string)
  {
    $td = mcrypt_module_open(CIPHER, "", MODE, CRYPT_IV);
    mcrypt_generic_init($td, CRYPT_KEY, CRYPT_IV);
    $cipher_text = mcrypt_generic($td, $string);
    $encrypted_text = bin2hex($cipher_text);
    mcrypt_generic_deinit($td);
    mcrypt_module_close($td);
    return $encrypted_text;
  }

  function user_has_role($rolename, $account=NULL)
   {
       global $user;

       if (!isset($account))
       {
           $account=$user;
       }

       if ($account->uid == 1)
       {
           return TRUE;
       }

       foreach ($user->roles as $rid=>$role)
       {
          if ($role == $rolename)
         {
            return TRUE;
         }
       }

        return FALSE;
   }


function isEmail($email) {
    return preg_match('|^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]{2,})+$|i', $email);
};



/****************************************
 * file upload content type
 ****************************************
 */
/* a call to this function will display the file for the node */
function mni_misc_functions_display_uploaded_file($node){
	//print_r($node);
		//send user there
		//drupal_goto("/node/".$new_chat_node_nid);
	if($node->type='uploadedfile' && $node->status==1){
		//file type here if needed: $node->field_file[0]['filemime'] => application/pdf
		drupal_goto($node->field_file[0]['filepath']);
	}else{
		//404
		drupal_goto("not-found");
	}
}

/****************************************
 * print / mail
 ****************************************
 */


/**
 * called by mni_misc_functions_form_alter().
 */
function _mni_misc_functions_print_mail_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'print_mail_form') {
  	//disallow sending whole article
		unset($form['fld_send_option']);
		$form['fld_send_option']['#type']="hidden";
		$form['fld_send_option']['#value']="sendlink";
  }
}

/**
 * Implementation of hook_user().
 */
 /* TODO -- come up with come up with a better way to identify users who should log in via sso
 */
function mni_misc_functions_user($op, &$edit, &$user, $category = NULL) {
  switch ($op) {
    case 'login':
			//need to make sure if a subscriber connected with FB that they also login via sso
			//sending them to dashboard is a nice way to do it because that's their home page and it forces a cas login if they haven't already
			$sso_roles=array('mainwire','fibullets','fxbullets','credit','cobullets','eqbullets','fxpackage','fipackage','AFM','email_credit_pro','email_credit_retail','email_fipackage_pro','email_fipackage_retail','email_fxpackage_pro','email_fxpackage_retail','fxpackageprime','fxpackageselect','oracleessay','screamaudio','fipackageselect');
			if(array_intersect($sso_roles, array_values($user->roles)) && $user->uid!=1){
				if (drupal_get_path_alias(arg(0).'/'.arg(1))!="mni-dashboard"){
					//drupal_goto("/mni-dashboard"); doesn't work here
					//drupal_set_message("In order to access your premium subscriber content, you will also need to log in via SSO.  <a href='mni-dashboard'>Click here to login</a>","error");
				  //create an ajax_alert
					$alert=array(
						'msg_type'=>'Premium Subscriber Login',
						'css_class'=>'',
						'msg'=>"In order to access your premium subscriber content, you also need to log in via SSO.",
						'action_link_text'=>'Click here to complete your login',
						'action_link_url'=>'/mni-dashboard',
				  );
		      if (module_exists('ajax_alerts')) {
						ajax_alerts_alert_create($alert,array($user->uid));
					} else {
						drupal_set_message("In order to access your premium subscriber content, you also need to log in via SSO. ".l("Click here to complete your login","/mni-dashboard"));
					}
				}
			}

      break;
  }
}

/**
 * webform
 */

/**
 * Modify a Webform submission, prior to saving it in the database.
 *
 * @param $node
 *   The Webform node on which this submission was made.
 * @param $submission
 *   The Webform submission that is about to be saved to the database.
 */
function mni_misc_functions_webform_submission_presave($node, &$submission) {
  if($node->nid==1789){
		//changing the values to make the email more readable
	  $component_id = 8;
	  if(!isset($submission->data[$component_id]['value'][0])){
	  	$submission->data[$component_id]['value'][0] = 'No free trial requested.';
	  } else {
	  	$submission->data[$component_id]['value'][0] = 'Free trial requested.';
	  }
	  //if they didn't click any products
	  $component_id = 10;
	  if(!isset($submission->data[$component_id]['value'][0])){
	  	$submission->data[$component_id]['value'][0] = '(No products selected.)';
	  }
	  //show the product info page they were on
	  $component_id = 7;
	  //if they are on standalone form, the product they clicked is in querystring instead of arg
  	$nid=check_plain($_GET['product']);
  	if(is_numeric($nid)){
  		$prod='node/'.$nid;
  	}else{
		  $prod=check_url(arg(0)).'/'.check_url(arg(1));
		}
	  $submission->data[$component_id]['value'][0] = str_replace("-"," ",str_replace("product-info/","",drupal_get_path_alias($prod)));
	}
}


/**
* Implementation of hook_webform_select_options_info().
* See webform/webform_hooks.php for further information on this hook in the Webform API.
*/
function mni_misc_functions_webform_select_options_info() {
  $items = array();
  $items['MNI_Products'] = array(
    'title' => t('MNI Products List'),
    'options callback' => '_mni_misc_functions_list_products'
  );
  return $items;
}

/*list of subscription products */
/* used on product info page forms */
function _mni_misc_functions_list_products() {
	$products = array();
	$sql = "SELECT n.title from node n join content_type_product_info_page ctpip on n.nid=ctpip.nid and n.vid=ctpip.vid where n.type ='product_info_page' and n.nid!=6852 order by ctpip.field_weight_value";
	$result = db_query($sql);
	while ($row= db_fetch_array($result)) {
		//it has a ? in it that I can't seem to get rid of and messes things up
		if(strpos($row[title], "AlphaFlash")!==false){
			$row[title]="AlphaFlash";
		}
		//they want an exception for this product to list it's 3 sub products instead even though there is only one product info page
		if($row[title]=="MNI Email Services"){
			$prodtitle="MNI Foreign Exchange Email Package";
			$products[str_replace(" ","-",$prodtitle)]=$prodtitle;
			$prodtitle="MNI Fixed Income Email Package";
			$products[str_replace(" ","-",$prodtitle)]=$prodtitle;
			$prodtitle="MNI Credit Email Package";
			$products[str_replace(" ","-",$prodtitle)]=$prodtitle;
		} else {
			$products[str_replace(" ","-",$row[title])]=$row[title];
		}
	}
	return $products;

}

function _mni_misc_functions_webform_client_form_1789_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'webform_client_form_1789') {
  	//if form is standalone, product is in querystring. hide the request free trial checkbox since that is the only option here
  	$nid=check_plain($_GET['product']);
  	if(is_numeric($nid)){
			$form['submitted']['freetrialbox']['request_a_free_trial']['#value']="Free trial requested.";
			$form['submitted']['freetrialbox']['request_a_free_trial']['#type']="hidden";
			$form['submitted']['freetrialbox']['#type']="hidden";
		}
  }
}


//greeting message - move out of block and use session var
//called by templates
function mni_misc_functions_greeting_msg(){
	global $user;
	if ($user->uid){
		//first check session
		$greeting_name=$_SESSION['greeting_name'];
  	if(!$greeting_name){
			$current_user= user_load($user->uid);
			if ($current_user->profile_first_name){
				$greeting_name=$current_user->profile_first_name;
			} else if ($current_user->profile_display_name){
				$greeting_name=$current_user->profile_display_name;
			}else{
				$greeting_name=$current_user->name;
			}
			$_SESSION['greeting_name']=$greeting_name;
		}
		print '<ul class="personal">';
		print '<li>Hello ' . $greeting_name . '</li>';
		print '<li><a href="' . url('logout') . '">Log Out</a></li>';
		print '</ul>';
	}
}


//Text Tables need pre tags
function mni_misc_functions_node_is_txttbl($node=NULL, $taxonomy=NULL) {
	//maybe todo: change 199 to "txttbl" for maintainability
	if (is_array($node->taxonomy) && in_array(199, array_keys ($node->taxonomy))){
		return true;
	}
	if (is_array($taxonomy) && in_array(199, array_keys ($taxonomy))){
		return true;
	}
	return false;
}


function mni_misc_functions_user_is_logged_in(){
	global $user;
	if ($user->uid > 0) {
		return true;
	}
	return false;
}
/*******************************************************************
chat link block and sector tabs block (the tabbed menu on home page along with the articles below it)
************************************************************************/

/**
 *
 * hook_block() implementation
 */
function mni_misc_functions_block($op = 'list', $delta = 0, $edit = array()) {
	global $user;
	  switch ($op) {
	    // for admin/system/block
	    case 'list' :
	      $block['mni_misc_functions_chat_link']['info'] = t('MNI Chat link');
	      $block['mni_misc_functions_sector_tabs']['info'] = t('MNI Sector Tabs');
		$block['mni_monitor_ad']['info'] = t('MNI Monitor Ad');
	      return $block;
	    break;
	    case 'view' :
		    $block = array();

		    switch ($delta) {
		      case 'mni_misc_functions_chat_link':
			      // MNI Chat link
			      $block['subject'] = $delta;
			      $block['content'] = array();

		        $interval = time() - variable_get('user_block_seconds_online', 900);
		        $authenticated_count = sess_count($interval,false); //false==logged in only
						global $user;
						if ($user->uid){
						   $linkText=$authenticated_count." Member".($authenticated_count==1?"":"s")." Online";
						   $linkUrl="/chatstarter";
						} else {
						   $linkText="Please Login";
						   $linkUrl="/user";
						}
		      	$block['content'] = theme('mni_misc_functions_chat_link', $linkText, $linkUrl);

			      return $block;
					break;
		      case 'mni_monitor_ad':
			$c = '<script type="text/javascript">'."\n".
			'	var mni_movie_shown = false;'."\n".
			'	function mni_showMonitorMovie() {'."\n".
			'		if(!mni_movie_shown) {'."\n".
			'			$("p.mni_monitor_movie").html(\'<iframe width="300" height="250" \'+'."\n".
			'				\'src="http://www.youtube.com/embed/uWzQG5WIfFo?\'+'."\n".
			'				\'&controls=0&autoplay=1" frameborder="0" \'+'."\n".
			'				\'</iframe>\');'."\n".
			'			mni_movie_shown = true;'."\n".
			'		}'."\n".
			'	}'."\n".
			'</script>'."\n".
			'<p class="mni_monitor_movie"><a href="javascript:mni_showMonitorMovie();">'."\n".
			'<img alt="" src="/sites/default/files/mnimonitor_thumb.png" style="width: 300px; height: 250px;" />'. "\n".
			'</a></p>';
			$block['content'] = $c;
			return $block;
			break;
		      case 'mni_misc_functions_sector_tabs':
						//MNI Sector Tabs
			      $block['subject'] = $delta;
			      $block['content'] = array();
		      	$sector=check_plain(arg(1));
		      	if(check_plain(arg(2))=="index" || drupal_is_front_page()){
		      		$index_page=true;
		      	}else{
		      		$index_page=false;
		      	}
						$showsubtabs=true;
						$class=array("top"=>"","macro"=>"","fx"=>"","cb"=>"","gp"=>"","reg"=>"");
						switch ($sector) {
							case 'macro-economy':
								$class["macro"]="tab active";
								$blocknum="1";
							break;
							case 'foreign-exchange':
								$class["fx"]="tab active";
								$blocknum="3";
							break;
							case 'central-banks':
								$class["cb"]="tab active";
								$blocknum="4";
							break;
							case 'government-policy':
								$class["gp"]="tab active";
								$blocknum="5";
							break;
							case 'news-by-region':
								$class["reg"]="tab active";
								$blocknum="6";
							break;
							default: //top headlines or Home page
								$class["top"]="tab active";
								$blocknum="2";
								$showsubtabs=false;
							break;
						}
						if($showsubtabs) {
							$subtabs=theme('links', menu_navigation_links('menu-'.$sector));
						} else {
							$subtabs=false;
						}
						if($index_page){
							$alacarte_stories=views_embed_view('tab_menu_alacarte_by_sector', $display_id = 'block_'.$blocknum);
							$stories_by_sector=views_embed_view('hp_stories_by_sector', $display_id = 'block_'.$blocknum);
						}else{
							//view articles_by_sector_term page display show subtab articles in $content of these pages
							$alacarte_stories="";
							$stories_by_sector="";
						}
		      	$block['content'] = theme('mni_misc_functions_sector_tabs', $class,$subtabs,$alacarte_stories,$stories_by_sector);
			      return $block;
					break;
				}
	    break;
	    default :
	  }

}

/**
 * Implementation of hook_theme().
 */
function mni_misc_functions_theme() {
  return array(
    'mni_misc_functions_chat_link' => array(
      'arguments' => array('linkText' => NULL,'linkUrl' => NULL),
    ),
    'mni_misc_functions_sector_tabs' => array(
      'arguments' => array('class' => NULL,'subtabs'=>NULL,'alacarte_stories'=>NULL,'stories_by_sector'=>NULL),
    ),
  );
}

function theme_mni_misc_functions_chat_link($linkText,$linkUrl) {
	$ret="<div class=\"chat-box\" onClick=\"window.open('".$linkUrl."','_blank')\" style=\"cursor: pointer;\"><h3>Chat</h3><span class=\"amt\">".$linkText."</span></div>";
  return $ret;
}
function theme_mni_misc_functions_sector_tabs($class,$subtabs,$alacarte_stories,$stories_by_sector) {
	$ret="
<div class=\"nav\">
	<ul class=\"sectortabset\">
		<li><a class=\"".$class['top']."\" href=\"/sector/top-headlines/index\">top headlines</a></li>
		<li><a class=\"".$class['macro']."\" href=\"/sector/macro-economy/index\">Macro Economy</a></li>
		<li><a class=\"".$class['fx']."\" href=\"/sector/foreign-exchange/index\">FOREIGN EXCHANGE</a></li>
		<li><a class=\"".$class['cb']."\" href=\"/sector/central-banks/index\">CENTRAL BANKS</a></li>
		<li><a class=\"".$class['gp']."\" href=\"/sector/government-policy/index\">GOVERNMENT POLICY</a></li>
		<li><a class=\"".$class['reg']."\" href=\"/sector/news-by-region/index\">NEWS BY REGION</a></li>
	</ul>
</div>
";
	if($subtabs){
		$ret.="<div id=\"tab2\" class=\"tab-holder\"><div class=\"nav-drop\">".$subtabs."</div></div>";
	}
	if($alacarte_stories){
	$ret.="<div id=\"tab1\" class=\"tab-holder\">".$alacarte_stories."</div>";
	}
	if($stories_by_sector){
	$ret.=$stories_by_sector;
}
  return $ret;
}
