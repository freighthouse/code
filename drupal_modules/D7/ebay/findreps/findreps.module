<?php

/**
 * @file
 *   BIPAC community actions for eBay IST site
 */

/**
 * Implements hook_theme()
 */
function findreps_theme() {
  return array(
    'findreps' => array(
      'template' => 'findreps',
      'variables' => array('officials' => NULL),
    ),
  );
}

/**
 * Implements hook_permission()
 */
function findreps_permission() {
  $permissions['findreps search'] = array (
    'title' => t('View Politicians'),
    'description' => t('Provide a list of a user\'s elected officials based on ZIP and Address'),
  );
  $permissions['findreps configure'] = array (
    'title' => t('Configure FindReps'),
    'description' => t('Set BIPAC variables'),
  );
  return $permissions;
}

/**
 * Implementation of hook_menu()
 */
function findreps_menu() {
  $items = array();
  $items['admin/config/content/findreps'] = array(
    'title' => 'Find Representatives',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('findreps_set_form'),
    'description' => t('Configure BIPAC access details'),
    'access arguments' => array('findreps configure'),
  );
  return $items;
}

/**
 * Set variables for accessing BIPAC alerts
 *
 * @return
 *   array    Drupal system form
 */
function findreps_set_form() {
  $form = array();
  $form['findreps_g'] = array(
    '#type' => 'textfield',
    '#title' => t('G'),
    '#default_value' => variable_get('findreps_g', ''),
  );
  $form['findreps_parent'] = array(
    '#type' => 'textfield',
    '#title' => t('Parent'),
    '#default_value' => variable_get('findreps_parent', ''),
  );
  return system_settings_form($form);
}

/**
 * Initiate address form lookup
 *
 * @return
 *   Drupal form
 */
function findreps_prepare_address_form() {
/*  $json = bipac_campaigns_smartystreets(NULL);
  $address = NULL;
  $zip = NULL;
  if (!empty($json)) {
    if (!empty($json[0]['components']['zipcode'])) {
      $zip = $json[0]['components']['zipcode'];
    }
    if (!empty($json[0]['delivery_line_1'])) {
      $address = $json[0]['delivery_line_1'];
    }

  }*/
  $address = bipac_session('address');
  $city = bipac_session('city');
  $state = bipac_session('state');
  $zip = bipac_session('zip');
  return drupal_get_form('findreps_address_form', $address, $city, $state, $zip);
}

/**
 * Form function that sends alerts
 *
 * @return
 *   Drupal form
 */
function findreps_address_form($form, $form_state, $address, $city, $state, $zip) {
  $form = array();
  $form['markup'] = array(
    '#markup' => '<p>' . t('Please fill in your address to determine your representative. Both fields are required as a zip code can have more than one representative.') . '</p>',
  );
  $form['findreps_address'] = array(
    '#title' => t('Your Address'),
    '#description' => t('Street Location'),
    '#required' => TRUE,
    '#type' => 'textfield',
    '#size' => 28,
    '#default_value' => $address,
  );
  $form['findreps_city'] = array(
    '#title' => t('City'),
    '#required' => TRUE,
    '#type' => 'textfield',
    '#size' => 28,
    '#default_value' => $city,
  );
  $form['findreps_state'] = array(
    '#type' => 'select',
    '#title' => t('State'),
    '#options' => _bipac_campaigns_states_array(),
    '#required' => TRUE,
    '#default_value' => $state,
  );
  $form['findreps_zip'] = array(
    '#title' => t('Zip Code'),
    '#required' => TRUE,
    '#type' => 'textfield',
    '#size' => 28,
    '#default_value' => $zip,
    '#description' => t('5-Digit Code'),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Find Representatives'),
  );
  $form['#action'] = "#block-findreps-findreps-connect";
  return $form;
}

/**
 * Validate address form
 *
 * @see
 *   findreps_address_form
 *   findreps_address_form_submit
 */
function findreps_address_form_validate($form, &$form_state) {
  if((!empty($form_state['values']['findreps_zip'])) && (!is_numeric(trim(str_replace('-', '', $form_state['values']['findreps_zip']))))) {
    form_set_error('findreps_zip', t('Zip must be numeric (##### or #####-####)'));
  }
}

/**
 * Get Geocode and submit to BIPAC
 *
 * @see
 *   findreps_address_form
 *   findreps_address_form_validate
 */
function findreps_address_form_submit($form, &$form_state) {
  $address = isset($form_state['values']['findreps_address']) ? trim($form_state['values']['findreps_address']) : NULL;
  $city = isset($form_state['values']['findreps_city']) ? trim($form_state['values']['findreps_city']) : NULL;
  $state = isset($form_state['values']['findreps_state']) ? trim($form_state['values']['findreps_state']) : NULL;
  $zip = isset($form_state['values']['findreps_zip']) ? trim($form_state['values']['findreps_zip']) : NULL;

  $api = bipac_object();

  if ($api === FALSE) {
    watchdog('bipac_campaigns', t('Problem with the API object.  Are the group and key set?'), array());
    return;
  }

  $success = $api->FromAddressListLegislators($address, NULL, $city, $state, $zip);

  if (($success === TRUE) && (!empty($api->FromAddressListLegislators_data))) {
    bipac_session('officials', $api->FromAddressListLegislators_data);
    bipac_session('city', $city);
    bipac_session('state', $state);
    bipac_session('zip', $zip);
    bipac_session('address', $address);
    $form_state['redirect'] = 'representatives';
  }
  else {
    drupal_set_message(t('Oops. Your address did not pass USPS validation or is outside a U.S. Congressional District.'), 'error');
  }
}
/**
 * Implements hook_block_info()
 */
function findreps_block_info() {
  $blocks['findreps_connect'] = array(
    'info' => t('Find Representatives Matches'),
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['findreps_connect_form'] = array(
    'info' => t('Find Your Representatives Form'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  $blocks['findreps_connect_form_2'] = array(
    'info' => t('Find Your Representatives Form'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  return $blocks;
}

/**
 * Implements hook_block_view()
 */
function findreps_block_view($block_name = '') {
  switch($block_name) {
    case 'findreps_connect_form':
      return array(
        'subject' => t('Find Your Representatives'),
        'content' => findreps_prepare_address_form(),
      );
      break;
    case 'findreps_connect':
      $officials = bipac_session('officials');
      $content = findreps_connect($officials);
      if($content != FALSE) {
        return array(
          'subject' => t('Your Representation'),
          'content' => theme('findreps',
            array('officials' => $content)
          ),
        );
      }
      break;
  }
}

/**
 * Grabs JSON from Connect API and parses into array
 *
 * @return
 *   array    Parsed JSON
 */
function findreps_connect($cached_officials) {
  if (empty($cached_officials)) {
    return array();
  }
  $officials = array();
  foreach ($cached_officials as $item) {
    /**
     * These values from primary API call
     */
    $photo = !empty($item['photoURL']) ? $item['photoURL'] : NULL;
    $title = !empty($item['TITLE']) ? $item['TITLE'] : NULL;
    $district = !empty($item['DistrictName']) ? $item['DistrictName'] : NULL;
    $id = !empty($item['leg_id_num']) ? $item['leg_id_num'] : NULL;
    $first_name = !empty($item['FIRST_NAME']) ? $item['FIRST_NAME'] : NULL;
    $last_name = !empty($item['LAST_NAME']) ? $item['LAST_NAME'] : NULL;
    $party = !empty($item['PARTY']) ? $item['PARTY'] : NULL;
    $phone = !empty($item['CAP_PHONE']) ? bipac_format_phone($item['CAP_PHONE']) : NULL;
    $state = !empty($item['StateFullName']) ? $item['StateFullName'] : NULL;
    $twitter = !empty($item['Twitter']) ? $item['Twitter'] : NULL;
    $facebook = !empty($item['Facebook']) ? $item['Facebook'] : NULL;
    $youtube = !empty($item['Youtube']) ? $item['Youtube'] : NULL;
    $email = !empty($item['E_MAIL_ADD']) ? $item['E_MAIL_ADD'] : NULL;
    $site = !empty($item['W_WIDE_WEB']) ? $item['W_WIDE_WEB'] : NULL;
    $location = !empty($item['DistrictName']) ? $item['DistrictName'] : NULL;
    $reptype = !empty($item['Type']) ? $item['Type'] : NULL;

    /**
     * All this stuff from subsequent API Call
      $additional = isset($id) ? findreps_additional($id, $g, $key) : array();
      $location = isset($additional->CAP_ADD1) ? $additional->CAP_ADD1 : NULL;
      $address = isset($additional->CAP_ADD2) ? $additional->CAP_ADD2 : NULL;
      $city = isset($additional->CAP_CITY) ? $additional->CAP_CITY : NULL;
      $state = isset($additional->CAP_STATE) ? $additional->CAP_STATE : NULL;
      $zip = isset($additional->CAP_ZIP) ? $additional->CAP_ZIP : NULL;
      $fax = isset($additional->CAP_FAX) ? bipac_format_phone($additional->CAP_FAX) : NULL;
      $site = isset($additional->Web) ? $additional->Web : NULL;
      $youtube = isset($additional->Youtube) ? $additional->Youtube : NULL;
      $twitter = isset($additional->Twitter) ? $additional->Twitter : NULL;
      $facebook = isset($additional->Facebook) ? $additional->Facebook : NULL;
      $email = isset($additional->Email) ? $additional->Email : NULL;
     */

  if ($location == 'U.S. Senate') {
    $type = 'us_senate';
  }
  elseif ($reptype == '1') {
    $type = 'us_house';
  }
  elseif ($reptype == 'Governor') {
    $type = 'governor';
  }
  elseif ($title != NULL) {
    $type = 'state_official';
  }
  if(($title != NULL) && ($reptype != 'governor')) {
    $officials[] = array('photo' => str_replace('maxsize=100', 'maxsize=167', $photo),
                         'title' => $title,
                         'first_name' => $first_name,
                         'last_name' => $last_name,
                          'party' => $party,
                         'type' => $type,
                         'address' => NULL,
                          'city' => NULL,
                          'state' => NULL,
                          'zip' => NULL,
                          'phone' => $phone,
                          'fax' => NULL,
                          'site' => $site,
                          'youtube' => $youtube,
                          'twitter' => $twitter,
                          'facebook' => $facebook);
    }
  }
  return $officials;
}

function findreps_additional($id, $g, $key) {
  $data = array();
  $data['apikey'] = $key;
  $data['g'] = $g;
  $data['leg_id_num'] = $id;
  $url = 'https://www.bipac.net/modules/JSON/FromIDListLegislators.asp';
  $options = array('method' => 'POST',
                   'data' => http_build_query($data),
                   'timeout' => 15,
                   'headers' => array('Content-Type' => 'application/x-www-form-urlencoded'),
                  );
  if (($result = drupal_http_request($url, $options)) && (!empty($result->data)) && ($json = json_decode($result->data))) {
    return reset($json);
  }
  return array();
}
